<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coding.blog.service.mapper.PostsMapper">

    <select id="getFrontIntroductionMsg" resultType="com.coding.blog.service.vo.FrontPostVo">
        SELECT
            posts_id,
            post_title,
            post_excerpt,
            post_date,
            post_modified,
            attribute,
            menu_order
        FROM
            posts
        ORDER BY
            menu_order DESC,
            post_modified DESC
    </select>
    <select id="getPostsByTermId" resultType="com.coding.blog.service.vo.FrontPostVo">
        SELECT p.posts_id,
               p.post_title,
               p.post_excerpt,
               p.post_date,
               p.post_modified,
               p.attribute
        FROM posts p
                 JOIN
             term_relationships tr
             ON
                 tr.term_relationships_id = p.posts_id
        WHERE tr.term_taxonomy_id = #{termTaxonomyId}
        ORDER BY post_modified DESC
    </select>
    <select id="getPostsByTagId" resultType="com.coding.blog.service.vo.FrontPostVo">
        SELECT p.posts_id,
               p.post_title,
               p.post_excerpt,
               p.post_date,
               p.post_modified,
               p.attribute
        FROM posts p
                 JOIN
             post_tag_relation ptr
             ON
                 ptr.post_id = p.posts_id
        WHERE ptr.post_tag_id = #{postTagId}
        ORDER BY post_modified DESC
    </select>

    <select id="getPostByTime" resultType="com.coding.blog.service.vo.FrontPostVo">
        SELECT posts_id,
               post_title,
               post_excerpt,
               post_date,
               post_modified,
               attribute,
               menu_order, YEAR ( post_date ) as year
        FROM
            posts
        ORDER BY
            year desc, post_modified DESC
    </select>

    <select id="recommendPosts" resultType="com.coding.blog.service.entity.Posts">
        SELECT posts_id, post_title, attribute, post_date
        FROM posts
        WHERE posts_id != #{postsId}
        ORDER BY RAND() LIMIT 0,3
    </select>

    <select id="getPostsByContent" resultType="com.coding.blog.service.entity.Posts">
        SELECT *
        FROM posts
        WHERE MATCH (post_title, post_content) AGAINST(#{content} IN BOOLEAN MODE)
        ORDER BY posts_id;
    </select>

    <select id="queryPostDetailById" resultType="com.coding.blog.service.vo.PostDetailVo">
        SELECT
            p.*,
            u.user_nicename,
            t.*,
            pt.*
        FROM
            posts p
                LEFT JOIN term_relationships tr ON p.posts_id = tr.term_taxonomy_id
                LEFT JOIN term_taxonomy t ON tr.term_taxonomy_id = t.term_taxonomy_id
                LEFT JOIN post_tag_relation ptr ON p.posts_id = ptr.post_id
                LEFT JOIN post_tag pt ON ptr.post_tag_id = pt.post_tag_id
                LEFT JOIN users u on p.post_author = u.users_id
        WHERE
            p.posts_id = #{postId}
    </select>

    <select id="getAuthorName" resultType="java.lang.String">
        SELECT
            u.user_nicename
        FROM
            posts p
                LEFT JOIN users u ON p.post_author = u.users_id
        WHERE
            p.posts_id = #{postId}
    </select>
</mapper>
